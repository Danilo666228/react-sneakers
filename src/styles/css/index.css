@charset "UTF-8";
/**
  Нормализация блочной модели
 */
@import url(https://fonts.googleapis.com/css?family=Inter:100,200,300,regular,500,600,700,800,900,100italic,200italic,300italic,italic,500italic,600italic,700italic,800italic,900italic);
*,
::before,
::after {
  box-sizing: border-box;
}

/**
	Убираем внутренние отступы слева тегам списков,
	у которых есть атрибут class
  */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
	Убираем внешние отступы body и двум другим тегам,
	у которых есть атрибут class
  */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
	Убираем внешние отступы вертикали нужным тегам,
	у которых есть атрибут class
  */
:where(h1, h2, h3, h4, h5, h6, p, ul, ol, dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
	Убираем стандартный маркер маркированному списку,
	у которого есть атрибут class
  */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
	Обнуляем вертикальные внешние отступы параграфа,
	объявляем локальную переменную для внешнего отступа вниз,
	чтобы избежать взаимодействие с более сложным селектором
  */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
	Внешний отступ вниз для параграфа без атрибута class,
	который расположен не последним среди своих соседних элементов
  */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
	Упрощаем работу с изображениями
  */
img {
  display: block;
  max-width: 100%;
}

/**
	Наследуем свойства шрифт для полей ввода
  */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
}

/**
	Плавный скролл
  */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
	Приводим к единому цвету svg-элементы
  */
svg *[fill] {
  fill: currentColor;
}

svg *[stroke] {
  stroke: currentColor;
}

/**
	Чиним баг задержки смены цвета при взаимодействии с svg-элементами
  */
svg * {
  transition-property: fill, stroke;
}

/**
	Удаляем все анимации и переходы для людей,
	которые предпочитают их не использовать
  */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
.container {
  max-width: 1240px;
  margin-inline: auto;
}

.section__header {
  margin-block: 40px;
}

body {
  font-family: "Inter", sans-serif;
}

a,
svg {
  text-decoration: none;
  color: inherit;
  transition-duration: 0.3s;
}

img {
  cursor: pointer;
  transform: matrix(10px);
}

.grid {
  --gridColumns: 1;
  display: grid;
  grid-template-columns: repeat(--gridColumns, 1fr);
  gap: 40px;
}
.grid--1 {
  grid-template-columns: repeat(1, 1fr);
}
.grid--2 {
  grid-template-columns: repeat(2, 1fr);
}
.grid--3 {
  grid-template-columns: repeat(3, 1fr);
}
.grid--4 {
  grid-template-columns: repeat(4, 1fr);
}
.grid--5 {
  grid-template-columns: repeat(5, 1fr);
}
.grid--6 {
  grid-template-columns: repeat(6, 1fr);
}
.grid--7 {
  grid-template-columns: repeat(7, 1fr);
}
.grid--8 {
  grid-template-columns: repeat(8, 1fr);
}
.grid--9 {
  grid-template-columns: repeat(9, 1fr);
}
.grid--10 {
  grid-template-columns: repeat(10, 1fr);
}
.grid--11 {
  grid-template-columns: repeat(11, 1fr);
}
.grid--12 {
  grid-template-columns: repeat(12, 1fr);
}

.overlay {
  display: flex;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.7);
  justify-content: flex-end;
  align-items: center;
  z-index: 1;
}

.cart {
  position: absolute;
  width: 400px;
  height: 100%;
  background-color: white;
  padding: 20px;
  border-radius: 8px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
}
.cart__header {
  display: flex;
  justify-content: space-between;
}
.cart__header button {
  border: none;
  background-color: transparent;
  display: inline-flex;
  cursor: pointer;
  align-items: center;
}
.cart__menu {
  display: flex;
  flex-direction: column;
  gap: 20px;
  overflow-y: auto;
  max-height: 700px;
}
.cart__item {
  padding: 10px;
  border: 1px solid #F3F3F3;
  border-radius: 20px;
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.cart__info {
  display: flex;
  flex-direction: column;
  gap: 20px;
  max-width: 150px;
}
.cart__info-title {
  font-size: 14px;
}

.header {
  padding-top: 60px;
  position: relative;
}
.header__inner {
  display: flex;
  justify-content: space-between;
  align-items: center;
  -moz-column-gap: 30px;
       column-gap: 30px;
  top: 0;
  left: 0;
}
.header__info {
  margin-right: auto;
}
.header__action-menu {
  display: flex;
  gap: 20px;
}
.header__action-link {
  display: flex;
  align-items: center;
  gap: 20px;
}
.header__action-link-img {
  display: flex;
  padding: 5px;
  border-radius: 5px;
}
.header__action-link-img:hover {
  background-color: red;
}

.product-card {
  padding: 10px;
  display: flex;
  flex-direction: column;
  row-gap: 14px;
  max-width: 210px;
  border: 1px solid #f8f8f8;
  border-radius: 10px;
  transition: transform 0.2s;
}
.product-card:hover {
  transform: translateY(-10px);
  transition: transform 0.2s;
}
.product-card__header {
  position: relative;
}
.product-card__footer {
  display: flex;
  justify-content: space-between;
}
.product-card__info {
  display: flex;
  flex-direction: column;
}
.product-card__info-subtitle {
  color: #bdbdbd;
}
.product-card__info-price {
  font-weight: bold;
}
.product-card__title {
  font-size: 15px;
  font-weight: 500;
}
.product-card__favorite {
  position: absolute;
  left: 0;
  top: 0;
}/*# sourceMappingURL=index.css.map */